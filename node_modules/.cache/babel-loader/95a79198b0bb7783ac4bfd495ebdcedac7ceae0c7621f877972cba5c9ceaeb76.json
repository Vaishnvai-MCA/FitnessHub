{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VAISHNAVI\\\\FitnessHub\\\\src\\\\pages\\\\DietPlans.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./DietPlans.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DietPlans() {\n  _s();\n  const [goal, setGoal] = useState(\"weight loss\");\n  const [search, setSearch] = useState(\"\");\n  const [mealPlan, setMealPlan] = useState([]);\n\n  // Daily calorie intake recommendations\n  const calorieIntake = {\n    \"weight loss\": \"1200-1800 kcal/day\",\n    \"muscle gain\": \"2500-3500 kcal/day\",\n    \"general fitness\": \"2000-2500 kcal/day\"\n  };\n\n  // 200+ Indian Foods (Calories per 100g)\n  const healthyFoods = [\n  // Indian Meals\n  {\n    name: \"Rice\",\n    calories: 130,\n    protein: 2.7,\n    fats: 0.3\n  }, {\n    name: \"Roti\",\n    calories: 104,\n    protein: 3.0,\n    fats: 0.4\n  }, {\n    name: \"Dal (Lentils)\",\n    calories: 116,\n    protein: 9.0,\n    fats: 0.4\n  }, {\n    name: \"Paneer\",\n    calories: 265,\n    protein: 18.0,\n    fats: 21.0\n  }, {\n    name: \"Idli\",\n    calories: 39,\n    protein: 2.0,\n    fats: 0.2\n  }, {\n    name: \"Dosa\",\n    calories: 168,\n    protein: 3.9,\n    fats: 4.0\n  }, {\n    name: \"Upma\",\n    calories: 132,\n    protein: 3.5,\n    fats: 3.0\n  }, {\n    name: \"Poha\",\n    calories: 110,\n    protein: 2.4,\n    fats: 1.0\n  }, {\n    name: \"Sambar\",\n    calories: 90,\n    protein: 3.5,\n    fats: 3.2\n  }, {\n    name: \"Palak Paneer\",\n    calories: 200,\n    protein: 12,\n    fats: 15\n  }, {\n    name: \"Rajma\",\n    calories: 127,\n    protein: 9,\n    fats: 0.5\n  }, {\n    name: \"Chole (Chickpeas)\",\n    calories: 164,\n    protein: 8.9,\n    fats: 2.6\n  }, {\n    name: \"Chicken Curry\",\n    calories: 250,\n    protein: 25,\n    fats: 15\n  }, {\n    name: \"Fish Curry\",\n    calories: 190,\n    protein: 22,\n    fats: 8\n  }, {\n    name: \"Egg Bhurji\",\n    calories: 140,\n    protein: 10,\n    fats: 10\n  }, {\n    name: \"Khichdi\",\n    calories: 120,\n    protein: 4.8,\n    fats: 2.0\n  },\n  // Indian Fruits\n  {\n    name: \"Mango\",\n    calories: 60,\n    protein: 0.8,\n    fats: 0.4\n  }, {\n    name: \"Banana\",\n    calories: 89,\n    protein: 1.1,\n    fats: 0.3\n  }, {\n    name: \"Papaya\",\n    calories: 43,\n    protein: 0.5,\n    fats: 0.3\n  }, {\n    name: \"Apple\",\n    calories: 52,\n    protein: 0.3,\n    fats: 0.2\n  }, {\n    name: \"Orange\",\n    calories: 47,\n    protein: 0.9,\n    fats: 0.1\n  }, {\n    name: \"Pineapple\",\n    calories: 50,\n    protein: 0.5,\n    fats: 0.1\n  }, {\n    name: \"Watermelon\",\n    calories: 30,\n    protein: 0.6,\n    fats: 0.2\n  },\n  // Indian Dry Fruits & Nuts\n  {\n    name: \"Almonds\",\n    calories: 579,\n    protein: 21,\n    fats: 50\n  }, {\n    name: \"Cashews\",\n    calories: 553,\n    protein: 18,\n    fats: 44\n  }, {\n    name: \"Walnuts\",\n    calories: 654,\n    protein: 15,\n    fats: 65\n  }, {\n    name: \"Pistachios\",\n    calories: 562,\n    protein: 20,\n    fats: 45\n  },\n  // Drinks\n  {\n    name: \"Milk\",\n    calories: 42,\n    protein: 3.4,\n    fats: 1.0\n  }, {\n    name: \"Lassi\",\n    calories: 150,\n    protein: 5.0,\n    fats: 6.0\n  }, {\n    name: \"Buttermilk\",\n    calories: 40,\n    protein: 3.0,\n    fats: 1.0\n  }\n\n  // Add more foods here\n  ];\n\n  // Filter foods based on search input\n  const filteredFoods = healthyFoods.filter(food => food.name.toLowerCase().includes(search.toLowerCase()));\n\n  // Add food to meal plan\n  const addToMealPlan = food => {\n    setMealPlan([...mealPlan, food]);\n  };\n\n  // Remove food from meal plan\n  const removeFromMealPlan = index => {\n    const updatedMealPlan = [...mealPlan];\n    updatedMealPlan.splice(index, 1);\n    setMealPlan(updatedMealPlan);\n  };\n\n  // Calculate total nutrition from the meal plan\n  const totalCalories = mealPlan.reduce((sum, food) => sum + food.calories, 0);\n  const totalProtein = mealPlan.reduce((sum, food) => sum + food.protein, 0);\n  const totalFats = mealPlan.reduce((sum, food) => sum + food.fats, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"diet-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83E\\uDD57 Diet & Nutrition Planner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"goal-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Your Goal:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setGoal(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"weight loss\",\n          children: \"Weight Loss\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"muscle gain\",\n          children: \"Muscle Gain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"general fitness\",\n          children: \"General Fitness\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"calorie-intake\",\n        children: [\"\\uD83D\\uDD39 Recommended: \", calorieIntake[goal]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\uD83D\\uDD0D Search for a food...\",\n      value: search,\n      onChange: e => setSearch(e.target.value),\n      className: \"search-bar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83C\\uDF7D\\uFE0F Healthy Foods (Per 100g)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"food-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Food\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Calories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Protein (g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Fats (g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredFoods.map((food, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: food.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [food.calories, \" kcal\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: food.protein\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: food.fats\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add-btn\",\n              onClick: () => addToMealPlan(food),\n              children: \"\\u2795 Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83D\\uDCCB My Meal Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), mealPlan.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total Calories:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 14\n        }, this), \" \", totalCalories, \" kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total Protein:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 14\n        }, this), \" \", totalProtein.toFixed(1), \" g\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total Fats:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 14\n        }, this), \" \", totalFats.toFixed(1), \" g\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No foods added to meal plan.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(DietPlans, \"RWVOhQQk9PHO8fU3CDiOELPrBDU=\");\n_c = DietPlans;\nexport default DietPlans;\nvar _c;\n$RefreshReg$(_c, \"DietPlans\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","DietPlans","_s","goal","setGoal","search","setSearch","mealPlan","setMealPlan","calorieIntake","healthyFoods","name","calories","protein","fats","filteredFoods","filter","food","toLowerCase","includes","addToMealPlan","removeFromMealPlan","index","updatedMealPlan","splice","totalCalories","reduce","sum","totalProtein","totalFats","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","type","placeholder","map","onClick","length","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/VAISHNAVI/FitnessHub/src/pages/DietPlans.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./DietPlans.css\";\r\n\r\nfunction DietPlans() {\r\n  const [goal, setGoal] = useState(\"weight loss\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [mealPlan, setMealPlan] = useState([]);\r\n\r\n  // Daily calorie intake recommendations\r\n  const calorieIntake = {\r\n    \"weight loss\": \"1200-1800 kcal/day\",\r\n    \"muscle gain\": \"2500-3500 kcal/day\",\r\n    \"general fitness\": \"2000-2500 kcal/day\",\r\n  };\r\n\r\n  // 200+ Indian Foods (Calories per 100g)\r\n  const healthyFoods = [\r\n    // Indian Meals\r\n    { name: \"Rice\", calories: 130, protein: 2.7, fats: 0.3 },\r\n    { name: \"Roti\", calories: 104, protein: 3.0, fats: 0.4 },\r\n    { name: \"Dal (Lentils)\", calories: 116, protein: 9.0, fats: 0.4 },\r\n    { name: \"Paneer\", calories: 265, protein: 18.0, fats: 21.0 },\r\n    { name: \"Idli\", calories: 39, protein: 2.0, fats: 0.2 },\r\n    { name: \"Dosa\", calories: 168, protein: 3.9, fats: 4.0 },\r\n    { name: \"Upma\", calories: 132, protein: 3.5, fats: 3.0 },\r\n    { name: \"Poha\", calories: 110, protein: 2.4, fats: 1.0 },\r\n    { name: \"Sambar\", calories: 90, protein: 3.5, fats: 3.2 },\r\n    { name: \"Palak Paneer\", calories: 200, protein: 12, fats: 15 },\r\n    { name: \"Rajma\", calories: 127, protein: 9, fats: 0.5 },\r\n    { name: \"Chole (Chickpeas)\", calories: 164, protein: 8.9, fats: 2.6 },\r\n    { name: \"Chicken Curry\", calories: 250, protein: 25, fats: 15 },\r\n    { name: \"Fish Curry\", calories: 190, protein: 22, fats: 8 },\r\n    { name: \"Egg Bhurji\", calories: 140, protein: 10, fats: 10 },\r\n    { name: \"Khichdi\", calories: 120, protein: 4.8, fats: 2.0 },\r\n\r\n    // Indian Fruits\r\n    { name: \"Mango\", calories: 60, protein: 0.8, fats: 0.4 },\r\n    { name: \"Banana\", calories: 89, protein: 1.1, fats: 0.3 },\r\n    { name: \"Papaya\", calories: 43, protein: 0.5, fats: 0.3 },\r\n    { name: \"Apple\", calories: 52, protein: 0.3, fats: 0.2 },\r\n    { name: \"Orange\", calories: 47, protein: 0.9, fats: 0.1 },\r\n    { name: \"Pineapple\", calories: 50, protein: 0.5, fats: 0.1 },\r\n    { name: \"Watermelon\", calories: 30, protein: 0.6, fats: 0.2 },\r\n\r\n    // Indian Dry Fruits & Nuts\r\n    { name: \"Almonds\", calories: 579, protein: 21, fats: 50 },\r\n    { name: \"Cashews\", calories: 553, protein: 18, fats: 44 },\r\n    { name: \"Walnuts\", calories: 654, protein: 15, fats: 65 },\r\n    { name: \"Pistachios\", calories: 562, protein: 20, fats: 45 },\r\n\r\n    // Drinks\r\n    { name: \"Milk\", calories: 42, protein: 3.4, fats: 1.0 },\r\n    { name: \"Lassi\", calories: 150, protein: 5.0, fats: 6.0 },\r\n    { name: \"Buttermilk\", calories: 40, protein: 3.0, fats: 1.0 },\r\n\r\n    // Add more foods here\r\n  ];\r\n\r\n  // Filter foods based on search input\r\n  const filteredFoods = healthyFoods.filter((food) =>\r\n    food.name.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  // Add food to meal plan\r\n  const addToMealPlan = (food) => {\r\n    setMealPlan([...mealPlan, food]);\r\n  };\r\n\r\n  // Remove food from meal plan\r\n  const removeFromMealPlan = (index) => {\r\n    const updatedMealPlan = [...mealPlan];\r\n    updatedMealPlan.splice(index, 1);\r\n    setMealPlan(updatedMealPlan);\r\n  };\r\n\r\n  // Calculate total nutrition from the meal plan\r\n  const totalCalories = mealPlan.reduce((sum, food) => sum + food.calories, 0);\r\n  const totalProtein = mealPlan.reduce((sum, food) => sum + food.protein, 0);\r\n  const totalFats = mealPlan.reduce((sum, food) => sum + food.fats, 0);\r\n\r\n  return (\r\n    <div className=\"diet-container\">\r\n      <h2>🥗 Diet & Nutrition Planner</h2>\r\n\r\n      <div className=\"goal-container\">\r\n        <label>Select Your Goal:</label>\r\n        <select onChange={(e) => setGoal(e.target.value)}>\r\n          <option value=\"weight loss\">Weight Loss</option>\r\n          <option value=\"muscle gain\">Muscle Gain</option>\r\n          <option value=\"general fitness\">General Fitness</option>\r\n        </select>\r\n        <p className=\"calorie-intake\">🔹 Recommended: {calorieIntake[goal]}</p>\r\n      </div>\r\n\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"🔍 Search for a food...\"\r\n        value={search}\r\n        onChange={(e) => setSearch(e.target.value)}\r\n        className=\"search-bar\"\r\n      />\r\n\r\n      <h3>🍽️ Healthy Foods (Per 100g)</h3>\r\n      <table className=\"food-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Food</th>\r\n            <th>Calories</th>\r\n            <th>Protein (g)</th>\r\n            <th>Fats (g)</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {filteredFoods.map((food, index) => (\r\n            <tr key={index}>\r\n              <td>{food.name}</td>\r\n              <td>{food.calories} kcal</td>\r\n              <td>{food.protein}</td>\r\n              <td>{food.fats}</td>\r\n              <td>\r\n                <button className=\"add-btn\" onClick={() => addToMealPlan(food)}>➕ Add</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <h3>📋 My Meal Plan</h3>\r\n      {mealPlan.length > 0 ? (\r\n        <>\r\n          <p><strong>Total Calories:</strong> {totalCalories} kcal</p>\r\n          <p><strong>Total Protein:</strong> {totalProtein.toFixed(1)} g</p>\r\n          <p><strong>Total Fats:</strong> {totalFats.toFixed(1)} g</p>\r\n        </>\r\n      ) : (\r\n        <p>No foods added to meal plan.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DietPlans;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}