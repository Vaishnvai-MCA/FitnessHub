{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VAISHNAVI\\\\FitnessHub\\\\src\\\\pages\\\\ProgressTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport \"./ProgressTracker.css\";\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nfunction ProgressTracker() {\n  _s();\n  const today = new Date().toISOString().split(\"T\")[0]; // Get today's date\n  const date = new Date();\n  const daysInMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n  const totalExercises = 10; // Fixed total exercises for simplicity\n\n  const [dailyProgress, setDailyProgress] = useState(() => {\n    return JSON.parse(localStorage.getItem(\"completedExercises\")) || {};\n  });\n  useEffect(() => {\n    setDailyProgress(JSON.parse(localStorage.getItem(\"completedExercises\")) || {});\n  }, []);\n\n  // Prepare Monthly Data for Graph\n  const monthlyData = Array.from({\n    length: daysInMonth\n  }, (_, index) => {\n    const day = index + 1;\n    const dateKey = new Date(date.getFullYear(), date.getMonth(), day).toISOString().split(\"T\")[0];\n    let totalCompleted = 0;\n    if (dailyProgress[dateKey]) {\n      Object.values(dailyProgress[dateKey]).forEach(category => {\n        totalCompleted += category.length;\n      });\n    }\n    return totalCompleted;\n  });\n  const chartData = {\n    labels: Array.from({\n      length: daysInMonth\n    }, (_, i) => i + 1),\n    // Days of the month\n    datasets: [{\n      label: \"Daily Completed Exercises\",\n      data: monthlyData,\n      backgroundColor: \"rgba(52, 152, 219, 0.7)\",\n      borderColor: \"rgba(41, 128, 185, 1)\",\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"progress-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\uD83D\\uDCCA Today's Progress - \", today]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), dailyProgress[today] ? Object.keys(dailyProgress[today]).map((category, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-category\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [category.replace(\"-\", \" \"), \" Progress\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Completed Exercises: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [dailyProgress[today][category].length, \" / \", totalExercises]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-fill\",\n          style: {\n            width: `${dailyProgress[today][category].length / totalExercises * 100}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No exercises completed today. Start your workout now! \\uD83D\\uDCAA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83D\\uDCCA Monthly Progress Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(ProgressTracker, \"tDCEaGWbhypK5cCO5lBLNFYIhzQ=\");\n_c = ProgressTracker;\nexport default ProgressTracker;\nvar _c;\n$RefreshReg$(_c, \"ProgressTracker\");","map":{"version":3,"names":["React","useState","useEffect","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","ProgressTracker","_s","today","Date","toISOString","split","date","daysInMonth","getFullYear","getMonth","getDate","totalExercises","dailyProgress","setDailyProgress","JSON","parse","localStorage","getItem","monthlyData","Array","from","length","_","index","day","dateKey","totalCompleted","Object","values","forEach","category","chartData","labels","i","datasets","label","data","backgroundColor","borderColor","borderWidth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","keys","map","replace","style","width","_c","$RefreshReg$"],"sources":["C:/Users/VAISHNAVI/FitnessHub/src/pages/ProgressTracker.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\r\nimport \"./ProgressTracker.css\";\r\n\r\n// Register Chart.js components\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nfunction ProgressTracker() {\r\n  const today = new Date().toISOString().split(\"T\")[0]; // Get today's date\r\n  const date = new Date();\r\n  const daysInMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\r\n  const totalExercises = 10; // Fixed total exercises for simplicity\r\n\r\n  const [dailyProgress, setDailyProgress] = useState(() => {\r\n    return JSON.parse(localStorage.getItem(\"completedExercises\")) || {};\r\n  });\r\n\r\n  useEffect(() => {\r\n    setDailyProgress(JSON.parse(localStorage.getItem(\"completedExercises\")) || {});\r\n  }, []);\r\n\r\n  // Prepare Monthly Data for Graph\r\n  const monthlyData = Array.from({ length: daysInMonth }, (_, index) => {\r\n    const day = index + 1;\r\n    const dateKey = new Date(date.getFullYear(), date.getMonth(), day).toISOString().split(\"T\")[0];\r\n\r\n    let totalCompleted = 0;\r\n    if (dailyProgress[dateKey]) {\r\n      Object.values(dailyProgress[dateKey]).forEach(category => {\r\n        totalCompleted += category.length;\r\n      });\r\n    }\r\n    return totalCompleted;\r\n  });\r\n\r\n  const chartData = {\r\n    labels: Array.from({ length: daysInMonth }, (_, i) => i + 1), // Days of the month\r\n    datasets: [\r\n      {\r\n        label: \"Daily Completed Exercises\",\r\n        data: monthlyData,\r\n        backgroundColor: \"rgba(52, 152, 219, 0.7)\",\r\n        borderColor: \"rgba(41, 128, 185, 1)\",\r\n        borderWidth: 1\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div className=\"progress-container\">\r\n      <h2>ðŸ“Š Today's Progress - {today}</h2>\r\n      {dailyProgress[today] ? (\r\n        Object.keys(dailyProgress[today]).map((category, index) => (\r\n          <div key={index} className=\"progress-category\">\r\n            <h3>{category.replace(\"-\", \" \")} Progress</h3>\r\n            <p>Completed Exercises: <strong>{dailyProgress[today][category].length} / {totalExercises}</strong></p>\r\n            <div className=\"progress-bar\">\r\n              <div className=\"progress-fill\" style={{ width: `${(dailyProgress[today][category].length / totalExercises) * 100}%` }}></div>\r\n            </div>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>No exercises completed today. Start your workout now! ðŸ’ª</p>\r\n      )}\r\n\r\n      {/* Monthly Progress Graph */}\r\n      <h3>ðŸ“Š Monthly Progress Overview</h3>\r\n      <div className=\"chart-container\">\r\n        <Bar data={chartData} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProgressTracker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}